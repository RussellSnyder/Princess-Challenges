{"version":3,"sources":["webpack:///./src/components/BingoChallengeGrid.js","webpack:///./src/templates/challenge.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/layout.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js"],"names":["BingoChallengeGrid","props","_this","_React$Component","call","this","state","arrangedBingoSpaces","freestyleTask","isEditingFreestyleTask","pinnedBingoSpaceIndexes","bannedBingoSpaces","maxBingoSpacesBanned","console","log","taskCollection","challengeBingo","bingoChallengeGridTemplate","componentDidMount","_this2","freestyleSpace","_","find","space","category","setState","task","arrangeBingoSpaces","createTaskBoxes","numBoxes","boxes","i","Number","push","react_default","a","createElement","key","className","_this3","newlyArrangedBingoSpaces","cleanBingoSpaces","cloneDeep","length","forEach","bannedSpace","indexOfBannedInClean","findIndex","splice","shuffledBingoSpaceOptions","shuffle","categories","includes","matchedSpaceIndex","name","isCenter","undefined","map","pop","spacesInitialized","onSpaceEditableChange","e","persist","target","value","toggleEditable","pinBingoSpace","Object","assign","unpinBingoSpace","filter","index","banBingoSpace","bannedBingoSpace","_this4","bingoSpacesWithoutBannedSpaces","cleanSpace","id","newBingoSpace","currentlyPlacedSpace","random","BINGO_SPACE_COUNT","unbanSpace","clearBannedSpaces","EditTask","_this5","defaultValue","onChange","Pin","_this6","isPinned","style","verticalAlign","onClick","Ban","_this7","CenterSpaceHeader","_this8","type","CenterSpaceContent","SpaceHeader","Space","repetitions","CreateTaskList","_this9","ListGroup_default","Item","BannedSpaces","_this10","Row","Col","sm","md","lg","Card_default","Body","CreateTaskBoard","_this11","render","_this12","Fragment","window","print","React","Component","Challenge","printPreview","script","document","src","async","body","appendChild","pageContext","layout","footerScripts","title","Image","featuredImage","url","alt","fluid","dangerouslySetInnerHTML","__html","description","BingoChallengeGrid_BingoChallengeGrid","pinterestHeader","data-pin-do","data-pin-board-width","data-pin-scale-height","data-pin-scale-width","href","pinterestLink","pinterestFooter","relevantBlogPosts","post","slug","Title","Text","whiteSpace","overflow","textOverflow","short","gatsby_browser_entry","to","m","module","exports","require","default","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","d","__webpack_exports__","createContext","PropTypes","object","string","isRequired","func","gatsby__WEBPACK_IMPORTED_MODULE_1__","react_bootstrap__WEBPACK_IMPORTED_MODULE_2__","react_bootstrap__WEBPACK_IMPORTED_MODULE_3__","react_bootstrap__WEBPACK_IMPORTED_MODULE_4__","react_bootstrap__WEBPACK_IMPORTED_MODULE_5__","_ref","children","activeKey","footerScript","defer","ProdPageRenderer","location","pageResources","InternalPageRenderer","json","propTypes","shape","pathname"],"mappings":"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","file":"component---src-templates-challenge-js-1a76b0ea34b1fc8c0f8a.js","sourcesContent":["import {Col, Row} from \"react-bootstrap\";\nimport React from \"react\";\nimport _ from \"lodash\";\nimport header from \"./header\";\nimport Card from \"react-bootstrap/Card\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\n\nconst CENTER_INDEX = 12;\nconst BINGO_SPACE_COUNT = 25;\n\nexport default class BingoChallengeGrid extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            arrangedBingoSpaces: [],\n            freestyleTask: '',\n            isEditingFreestyleTask: false,\n            pinnedBingoSpaceIndexes: [],\n            bannedBingoSpaces: [],\n            maxBingoSpacesBanned: false\n        }\n\n        console.log(props)\n\n        this.taskCollection = props.challengeBingo.taskCollection\n        this.bingoChallengeGridTemplate = props.challengeBingo.bingoChallengeGridTemplate\n    }\n\n    componentDidMount() {\n        const freestyleSpace = _.find(this.taskCollection, space => space.category === \"Freestyle\")\n\n        this.setState({freestyleTask: freestyleSpace.task}, () => {\n            this.arrangeBingoSpaces()\n        })\n\n    }\n\n    createTaskBoxes(numBoxes) {\n        let boxes = [];\n        for (let i = 1; i <= Number(numBoxes); i++) {\n            boxes.push(<span key={i} className=\"repetition-box\"/>)\n        }\n        return boxes\n    }\n\n    arrangeBingoSpaces() {\n        const {bannedBingoSpaces} = this.state;\n\n        let newlyArrangedBingoSpaces = [];\n\n        let cleanBingoSpaces = _.cloneDeep(this.taskCollection);\n\n        // remove banned bingo spaces\n        if (bannedBingoSpaces.length > 0) {\n            bannedBingoSpaces.forEach(bannedSpace => {\n                const indexOfBannedInClean = cleanBingoSpaces.findIndex(space => space.task === bannedSpace.task)\n                cleanBingoSpaces.splice(indexOfBannedInClean, 1)\n            })\n        }\n\n        let shuffledBingoSpaceOptions = _.shuffle(cleanBingoSpaces)\n\n\n        // Fill what matches in the grid template\n        this.bingoChallengeGridTemplate.categories.forEach((category, i) => {\n\n            // keep pinned ones where they are pinned\n            if (this.state.pinnedBingoSpaceIndexes.includes(i)) {\n                newlyArrangedBingoSpaces.push(this.state.arrangedBingoSpaces[i])\n                return\n            }\n\n            const matchedSpaceIndex = _.findIndex(shuffledBingoSpaceOptions, space => {\n                return space.category === category.name\n            });\n\n            if (matchedSpaceIndex > -1) {\n                newlyArrangedBingoSpaces[i] = shuffledBingoSpaceOptions[matchedSpaceIndex];\n                // center logic\n                if (i === CENTER_INDEX) {\n                    newlyArrangedBingoSpaces[i].isCenter = true;\n                }\n                shuffledBingoSpaceOptions.splice(matchedSpaceIndex, 1)\n            } else {\n                newlyArrangedBingoSpaces[i] = undefined;\n            }\n        })\n\n        // Add freestyle default values to state to be editable but persisted through shuffles\n\n        // Fill in undefined with random space\n        newlyArrangedBingoSpaces = newlyArrangedBingoSpaces.map((space, i) => {\n            if (space) {\n                return space\n            } else {\n                return shuffledBingoSpaceOptions.pop()\n            }\n        })\n\n        // let newlyArrangedBingoSpaces = _.sampleSize(this.taskCollection, BINGO_CARD_SIZE)\n\n        this.setState({\n            arrangedBingoSpaces: newlyArrangedBingoSpaces,\n            spacesInitialized: true\n        })\n\n    }\n\n    onSpaceEditableChange(e) {\n        e.persist()\n\n        this.setState({freestyleTask: e.target.value})\n    }\n\n    toggleEditable() {\n        this.setState(state => {\n            return ({isEditingFreestyleTask: !state.isEditingFreestyleTask})\n        })\n    }\n\n    pinBingoSpace(i) {\n        this.setState(state => {\n            let {pinnedBingoSpaceIndexes} = state;\n\n            pinnedBingoSpaceIndexes.push(i)\n\n            return {\n                ...state,\n                pinnedBingoSpaceIndexes\n            }\n        })\n    }\n\n    unpinBingoSpace(i) {\n        this.setState(state => {\n            let {pinnedBingoSpaceIndexes} = state;\n\n            pinnedBingoSpaceIndexes = pinnedBingoSpaceIndexes.filter(index => index !== i)\n\n            return {\n                ...state,\n                pinnedBingoSpaceIndexes\n            }\n        })\n    }\n\n    banBingoSpace(bannedBingoSpace, i) {\n        this.setState(state => {\n            let {bannedBingoSpaces, arrangedBingoSpaces} = state;\n            let {category} = bannedBingoSpace;\n\n            let cleanBingoSpaces = _.cloneDeep(this.taskCollection);\n\n            let bingoSpacesWithoutBannedSpaces = cleanBingoSpaces.filter((cleanSpace) => {\n                // remove current space\n                if (cleanSpace.id === bannedBingoSpace.id) {\n                    return false\n                }\n                return !bannedBingoSpaces.find(bannedSpace => bannedSpace.id === cleanSpace.id)\n            })\n\n            // try to find a space with the same category and is not currently on the board\n            let newBingoSpace = bingoSpacesWithoutBannedSpaces.find(space => {\n                return space.category === category\n                        && bingoSpacesWithoutBannedSpaces.find(currentlyPlacedSpace => currentlyPlacedSpace.id !== space.id)\n            })\n\n            // if no space with the same category, get a random one\n            if (!newBingoSpace) {\n                newBingoSpace = bingoSpacesWithoutBannedSpaces[_.random(0, bingoSpacesWithoutBannedSpaces - 1)]\n            }\n\n            arrangedBingoSpaces[i] = newBingoSpace\n            bannedBingoSpaces.push(bannedBingoSpace);\n\n            return {\n                ...state,\n                arrangedBingoSpaces,\n                bannedBingoSpaces,\n                maxBingoSpacesBanned: bingoSpacesWithoutBannedSpaces.length < BINGO_SPACE_COUNT + 1\n            }\n        })\n    }\n\n    unbanSpace(i) {\n        this.setState(state => {\n            let {bannedBingoSpaces} = state;\n\n            bannedBingoSpaces.splice(i, 1)\n\n            return {\n                ...state,\n                bannedBingoSpaces,\n                maxBingoSpacesBanned: bannedBingoSpaces.length > BINGO_SPACE_COUNT + 1\n            }\n        })\n\n    }\n\n    clearBannedSpaces() {\n        this.setState(state => {\n            return {\n                ...state,\n                bannedBingoSpaces: [],\n                maxBingoSpacesBanned: false\n            }\n        })\n    }\n\n    EditTask() {\n        return <div className=\"form-group\">\n            <textarea\n                    className=\"form-control\"\n                    defaultValue={this.state.freestyleTask}\n                    onChange={(e) => this.onSpaceEditableChange(e)}\n            />\n        </div>\n    }\n\n    Pin(i) {\n        const {pinnedBingoSpaceIndexes} = this.state\n\n        const isPinned = pinnedBingoSpaceIndexes.includes(i);\n\n        return <span className={`fa-stack ${!isPinned ? 'text-muted' : ''}`}\n                     style={{verticalAlign: 'top'}}\n                     onClick={() => isPinned ? this.unpinBingoSpace(i) : this.pinBingoSpace(i)}>\n                    <i className={`${isPinned ? 'fas' : 'far' } fa-circle fa-stack-2x`}/>\n                    <i className={`fas fa-thumbtack fa-stack-1x ${isPinned ? 'fa-inverse' : '' }`}/>\n        </span>\n    }\n\n    Ban(space, i) {\n        const {maxBingoSpacesBanned} = this.state;\n\n        if (maxBingoSpacesBanned) return;\n\n        return <span className=\"fas fa-ban text-danger\" onClick={() => this.banBingoSpace(space, i)}/>\n    }\n\n    CenterSpaceHeader() {\n        const {isEditingFreestyleTask} = this.state;\n\n        return <header className=\"label no-print\" onClick={() => this.toggleEditable()}>\n            <button type=\"button\"\n                    className={`far fa-${isEditingFreestyleTask ? 'save' : 'edit'} btn btn-${isEditingFreestyleTask ? 'success' : 'warning'} btn-sm`}/>\n        </header>\n    }\n\n    CenterSpaceContent(space) {\n        const {isEditingFreestyleTask} = this.state;\n\n        return isEditingFreestyleTask ? this.EditTask() : space.task\n    }\n\n    SpaceHeader(space, i) {\n        return <header className={\"pin-and-ban d-print-none\"}>\n            <span className=\"pin\">\n                {this.Pin(i)}\n            </span>\n            <span className=\"ban\">\n                {this.Ban(space, i)}\n            </span>\n        </header>\n    }\n\n\n    Space(space, i) {\n        return <div\n                key={space.category + i}\n                className={`text-center space ${space.category} ${space.isCenter && 'editable'}`}\n        >\n            {space.isCenter ? this.CenterSpaceHeader() : this.SpaceHeader(space, i)}\n            <div className=\"content\">\n                {space.isCenter ? this.CenterSpaceContent(space) : space.task}\n                <div className=\"repetition\">\n                    {this.createTaskBoxes(space.repetitions)}\n                </div>\n            </div>\n        </div>\n    }\n\n    CreateTaskList() {\n        const {arrangedBingoSpaces} = this.state;\n\n        return <ListGroup className={\"challenge-list\"}>\n            {arrangedBingoSpaces.map((space, i) => <ListGroup.Item>\n                        <div className=\"pin\">\n                            {this.Pin(i)}\n                        </div>\n                        <div className=\"task\">\n                            {space.task}\n                        </div>\n                        <div className=\"ban\">\n                            {this.Ban(space, i)}\n                        </div>\n                    </ListGroup.Item>\n            )}\n        </ListGroup>\n    }\n\n    BannedSpaces() {\n        const {bannedBingoSpaces} = this.state\n\n        if (bannedBingoSpaces.length < 1) {\n            return\n        }\n\n        return <div className=\"banned-spaces\">\n            <h3 className=\"banned-spaces__title mb-3\">Banned Spaces\n                <span className=\"ml-2 fas fa-ban text-danger\"/>\n                <button className=\"btn btn-success float-right\" onClick={() => this.clearBannedSpaces()}>Add All Back\n                    In\n                </button>\n            </h3>\n\n            <Row className=\"justify-content-md-center\">\n                {bannedBingoSpaces.map((space, i) =>\n                        <Col sm={6} md={4} lg={3} className=\"banned-space text-center mb-3\">\n                            <Card>\n                                <Card.Body>\n                                    {space.task}\n                                    <button className=\"mt-2 btn btn-success w-100\"\n                                            onClick={() => this.unbanSpace(i)}\n                                    >\n                                        <i className=\"mr-1 fas fa-plus-circle \"/> Add Back In Board\n                                    </button>\n                                </Card.Body>\n                            </Card>\n                        </Col>\n                )}\n            </Row>\n        </div>\n    }\n\n    CreateTaskBoard() {\n        const {arrangedBingoSpaces} = this.state;\n\n        return <div className=\"board\">\n            {arrangedBingoSpaces.map((space, i) => this.Space(space, i))}\n        </div>\n    }\n\n    render() {\n        return <>\n            <Row className=\"no-print\">\n                <Col>\n                    <button className=\"btn btn-primary\" onClick={() => this.arrangeBingoSpaces()}>Shuffle</button>\n                </Col>\n                <Col className=\"text-right\">\n                    <button className=\"btn btn-success\" onClick={() => window.print()}>Print</button>\n                </Col>\n            </Row>\n            <hr className=\"d-print-none\"/>\n            <div className=\"board-container d-none d-md-block mb-4\">\n                {this.CreateTaskBoard()}\n            </div>\n            <div className=\"list mb-4 d-md-none\">\n                {this.CreateTaskList()}\n            </div>\n            <div className=\"d-print-none\">\n                {this.BannedSpaces()}\n            </div>\n        </>\n    }\n}\n","import React from \"react\"\nimport Layout from \"../components/layout\"\nimport {Col, Image, Row} from \"react-bootstrap\";\nimport {Link} from \"gatsby\"\n\nimport BingoChallengeGrid from '../components/BingoChallengeGrid'\nimport Card from \"react-bootstrap/Card\";\n\nexport default class Challenge extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            printPreview: false\n        }\n    }\n\n    componentDidMount() {\n        const script = document.createElement(\"script\");\n        script.src = \"//assets.pinterest.com/js/pinit.js\";\n        script.async = true;\n\n        document.body.appendChild(script);\n\n    }\n\n\n\n    render() {\n        const props = this.props.pageContext\n\n        // console.log(props.arrangedBingoSpaces)\n\n        return (<Layout footerScripts={[\"//assets.pinterest.com/js/pinit.js\"]} className=\"challenge\">\n            <h1>{props.title}</h1>\n            <div className=\"featured-image no-print\">\n                <Image className={\"d-block m-auto\"}\n                        src={props.featuredImage.url}\n                       alt={props.featuredImage.title}\n                       fluid=\"true\"/>\n            </div>\n            <section className=\"description no-print\" dangerouslySetInnerHTML={{__html: props.description}}/>\n            <Row className={\"print-only print-header\"}>\n                <Image fluid={true} src={props.featuredImage.url}/>\n                <section className=\"description\" dangerouslySetInnerHTML={{__html: props.description}}/>\n            </Row>\n            <section className=\"challenge-bingo\">\n                <h3 className=\"d-print-none\">Tasks</h3>\n                <BingoChallengeGrid { ...props } />\n            </section>\n            <section className=\"pinterst no-print\">\n                <header><h3>{props.pinterestHeader}</h3></header>\n                <main>\n                    <a data-pin-do=\"embedBoard\"\n                       data-pin-board-width=\"1500\"\n                       data-pin-scale-height=\"1500\"\n                       data-pin-scale-width=\"500\"\n                       href={props.pinterestLink}>\n                    </a>\n                </main>\n                <footer><h4>{props.pinterestFooter}</h4></footer>\n            </section>\n            <section className=\"related-posts no-print\">\n                <Row>\n                    {props.relevantBlogPosts.map(post => {\n                        return <Col className={\"mb-4\"} key={post.slug} sm={6} md={4}>\n                            <Card>\n                                <Card.Body>\n                                    <Card.Title>\n                                        {post.title}\n                                    </Card.Title>\n                                    <Card.Text>\n                                        <div style={{ whiteSpace: 'nowrap', overflow: 'hidden', textOverflow: 'ellipsis' }}>\n                                            {post.short}\n                                        </div>\n                                        <Link className={\"w-100 mt-4 btn btn-primary\"} to={`blog/${post.slug}`}>\n                                            Read Post <i className=\"ml-2 fas fa-external-link-alt\"/>\n                                        </Link>\n                                    </Card.Text>\n                                </Card.Body>\n                            </Card>\n                            {/*<Link to={`blog/${post.slug}`}>{post.title}</Link>*/}\n                        </Col>\n                    })}\n                </Row>\n            </section>\n            <footer className={\"print-only text-center\"}>Pinterest Board: {props.pinterestLink}</footer>\n        </Layout>)\n    }\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport {Col, Container, Nav, Row} from \"react-bootstrap\";\n\nexport default ({ children, footerScripts, className }) => (\n        <Container className={className}>\n            <Row className=\"no-print\">\n                <Col>\n                    <Nav className=\"justify-content-start\" activeKey=\"/\">\n                        <Nav.Item>\n                            <Link className=\"nav-link\" to=\"/\">\n                                <h3>Princess Challenges</h3>\n                            </Link>\n                        </Nav.Item>\n                    </Nav>\n\n                    <Nav className=\"justify-content-end\" activeKey=\"/\">\n                        <Nav.Item>\n                            <Link className=\"nav-link\" to=\"/challenges/\">Challenges</Link>\n                        </Nav.Item>\n                        <Nav.Item>\n                            <Link className=\"nav-link\" to=\"/blog/\">Blog</Link>\n                        </Nav.Item>\n                        <Nav.Item>\n                            <Link className=\"nav-link\" to=\"/contact/\">Contact</Link>\n                        </Nav.Item>\n                    </Nav>\n                </Col>\n            </Row>\n            {children}\n            {footerScripts && footerScripts.map(footerScript => <script key={footerScript} async defer src={footerScript}/>)}\n        </Container>\n)\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\n\nexport default ({ children }) => <h1>This is a header.</h1>\n"],"sourceRoot":""}